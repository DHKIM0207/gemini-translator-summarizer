---
description: 
globs: 
alwaysApply: true
---
# 개발 가이드라인

## 코드 스타일
- HTML, CSS, JavaScript 파일은 UTF-8 인코딩을 사용합니다.
- 들여쓰기는 2칸 공백을 사용합니다.
- 변수와 함수 이름은 camelCase를 사용합니다.
- CSS 클래스 이름은 kebab-case를 사용합니다.
- 한국어 사용자를 위한 UI이므로 모든 사용자 메시지는 한글로 작성합니다.

## 사용자 인터페이스
- 모든 UI 컴포넌트는 반응형으로 설계하여 다양한 화면 크기에 대응해야 합니다.
- 시각적 피드백(로딩 인디케이터 등)을 항상 제공하여 사용자 경험을 향상시킵니다.
- Material Design 아이콘을 사용하여 UI 일관성을 유지합니다.

## API 사용
- Gemini API 호출 시 에러 처리를 반드시 포함해야 합니다.
- API 키는 로컬 스토리지에 안전하게 저장합니다.
- 대용량 데이터 처리 시 스트리밍 방식을 활용합니다.

## 기능 추가 시
- 새로운 기능 추가 시 기존 코드 스타일과 일관성을 유지합니다.
- 코드 변경 시 주석을 통해 변경 내용을 설명합니다.
- 기능 추가 후 브라우저 호환성 테스트를 수행합니다.

## 라이브러리 사용
- 외부 라이브러리 사용 시 [mcp_context7]를 활용하여 최신 문서를 참조합니다.
- 라이브러리 의존성은 최소화하고, 필요한 경우에만 추가합니다.

## 코드 변경 및 추가
- 이 규칙 파일은 새로운 코드가 추가되거나 기존 코드가 변경될 때마다 업데이트되어야 합니다.
- 주요 기능이 추가되면 project-overview.mdc 파일도 함께 업데이트합니다.

## 문제 해결 접근법
- 모든 복잡한 문제 해결 시 [mcp_server-sequential-thinking_sequentialthinking]을 활용하여 체계적으로 접근합니다.
- 문제를 작은 단위로 나누어 단계적으로 해결합니다.
- 문제 해결 과정과 결과를 명확히 문서화합니다.

